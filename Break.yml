---
- hosts: localhost
  collections:
    - netapp.ontap
  name: test1 

# Prompt user for destination cluster, creds, and SVM  
  vars_prompt: 
    - name: host
      prompt: Host IP
      private: false
    - name: uname
      prompt: Enter username
      private: false
    - name: passw
      prompt: Enter password
      private: false   # Do NOT change this value to 'false' or the password will be shown in plain text
    - name: svm
      prompt: Enter SVM name
      private: false
      
  tasks:
# Initial check that the SVM has mirrored volumes and display the check resulsts
  - name: Check that the SVM has Mirrored volumes
    na_ontap_command:
      hostname: "{{ host }}"
      username: "{{ uname }}"
      password: "{{ passw }}"
      https: true
      validate_certs: false
      command: ['snapmirror show -destination-path {{ svm }}:* -fields state']
      return_dict: true
    register: svmdrstatus
    until: svmdrstatus.msg.stdout.find("Snapmirrored") != -1
    retries: 5
    delay: 30
  - name: Display results
    debug:
      msg: "{{ svmdrstatus.msg.stdout_lines[2].split()[2] }}"
# Send command to break any mirrored volume relationships
  - name: Break SnapMirror relationships
    na_ontap_command:
      hostname: "{{ host }}"
      username: "{{ uname }}"
      password: "{{ passw }}"
      https: true
      validate_certs: false
      command: ['snapmirror break -destination-path {{ svm }}:*']
  - name: Verify SnapMirror relationships are broken
    na_ontap_command:
      hostname: "{{ host }}"
      username: "{{ uname }}"
      password: "{{ passw }}"
      https: true
      validate_certs: false
      command: ['snapmirror show -destination-path {{ svm }}:* -fields state']
      return_dict: true
    register: svmbreakstatus
    until: svmbreakstatus.msg.stdout.find("Broken-off") != -1
    retries: 3
    delay: 10
  - name: Display SnapMirror state
    debug:
      msg: "{{ svmbreakstatus.msg.stdout_lines[2].split()[2] }}"
